type[]
int[]
float[]
bool[]
string[]
color[]
line[]
label[]
box[]
table[]
linefill[]
simple float a
series type
int
float
bool
string
color
line
label
box
table
linefill
array<type>
array<int>
array<float>
array<bool>
array<string>
array<color>
array<line>
array<label>
array<box>
array<table>
array<linefill>
matrix<type>
matrix<int>
matrix<float>
matrix<bool>
matrix<string>
matrix<color>
matrix<line>
matrix<label>
matrix<box>
matrix<table>
matrix<linefill>
chart.point
map<type,type>
polyline


method.copy()
method.delete()
method.get_left()
method.get_right()
method.get_top()
method.get_bottom()
method.set_left()
method.set_lefttop()
method.set_right()
method.set_rightbottom()
method.set_top()
method.set_bottom()
method.set_border_color()
method.set_bgcolor()
method.set_border_width()
method.set_border_style()
method.set_extend()
method.set_text_font_family()
method.set_text_halign()
method.set_text_valign()
method.set_text_size()
method.set_text()
method.set_text_color()
method.set_text_wrap()
method.set_x1()
method.set_y1()
method.set_xy1()
method.set_x2()
method.set_y2()
method.set_xy2()
method.set_xloc()
method.set_color()
method.set_style()
method.set_width()
method.get_x1()
method.get_y1()
method.get_x2()
method.get_y2()
method.get_price()
method.get_line1()
method.get_line2()
method.set_x()
method.set_y()
method.set_xy()
method.set_yloc()
method.set_textcolor()
method.set_size()
method.set_textalign()
method.set_tooltip()
method.get_x()
method.get_y()
method.get_text()
method.slice()
method.size()
method.first()
method.last()
method.every()
method.some()
method.get()
method.min()
method.max()
method.range()
method.sum()
method.set()
method.fill()
method.insert()
method.join()
method.push()
method.remove()
method.pop()
method.clear()
method.sort()
method.sort_indices()
method.percentrank()
method.percentile_nearest_rank()
method.percentile_linear_interpolation()
method.abs()
method.binary_search()
method.binary_search_leftmost()
method.binary_search_rightmost()
method.concat()
method.avg()
method.stdev()
method.variance()
method.covariance()
method.mode()
method.median()
method.standardize()
method.indexof()
method.lastindexof()
method.includes()
method.shift()
method.unshift()
method.reverse()
method.set_position()
method.set_frame_color()
method.set_frame_width()
method.cell()
method.cell_set_text()
method.cell_set_text_font_family()
method.cell_set_tooltip()
method.cell_set_width()
method.cell_set_height()
method.cell_set_text_color()
method.cell_set_text_halign()
method.cell_set_text_valign()
method.cell_set_text_size()
method.cell_set_bgcolor()
method.row()
method.col()
method.reshape()
method.add_row()
method.add_col()
method.remove_row()
method.remove_col()
method.submatrix()
method.columns()
method.rows()
method.elements_count()
method.swap_rows()
method.swap_columns()
method.det()
method.transpose()
method.diff()
method.mult()
method.pinv()
method.inv()
method.rank()
method.trace()
method.eigenvalues()
method.eigenvectors()
method.kron()
method.pow()
method.is_zero()
method.is_identity()
method.is_binary()
method.is_symmetric()
method.is_antisymmetric()
method.is_diagonal()
method.is_antidiagonal()
method.is_triangular()
method.is_stochastic()
method.is_square()
method.merge_cells()
method.copy()
method.set_first_point()
method.set_second_point()
method.set_point()
method.set_top_left_point()
method.set_bottom_right_point()
method.contains()
method.keys()
method.values()
method.put()
method.put_all()

or
and
not
if
switch
for
for j in a
while
var a
varip a
import
export
type a
method
continue
break

true
false
session.isfirstbar
session.islastbar
session.isfirstbar_regular
session.islastbar_regular
bar_index
last_bar_index
last_bar_time
na
volume
open
high
low
close
hl2
hlc3
hlcc4
ohlc4
ta.vwap
ta.accdist
ta.tr
ta.iii
ta.wvad
ta.wad
ta.obv
ta.pvt
ta.nvi
ta.pvi
syminfo.ticker
syminfo.tickerid

timeframe.period
syminfo.root
syminfo.prefix
syminfo.mintick
syminfo.pointvalue
syminfo.session
syminfo.timezone
syminfo.description
syminfo.currency
syminfo.basecurrency
syminfo.type

syminfo.volumetype
timeframe.multiplier
timeframe.isdwm
timeframe.isintraday
timeframe.isdaily
timeframe.isweekly
timeframe.ismonthly
timeframe.isminutes
timeframe.isseconds
timenow
time
time_close
time_tradingday
year
month
weekofyear
dayofmonth
dayofweek
hour
minute
second

barstate.isfirst
barstate.islast
barstate.ishistory
barstate.isrealtime
barstate.isnew
barstate.isconfirmed
barstate.islastconfirmedhistory
session.ismarket
session.ispremarket
session.ispostmarket
chart.bg_color
chart.fg_color
chart.left_visible_bar_time
chart.right_visible_bar_time
chart.is_heikinashi
chart.is_renko
chart.is_linebreak
chart.is_kagi
chart.is_pnf
chart.is_range
chart.is_standard
math.pi
math.phi
math.rphi
math.e
session.regular
session.extended
adjustment.none
adjustment.splits
adjustment.dividends
hline.style_solid
hline.style_dotted
hline.style_dashed
position.top_left
position.top_center
position.top_right
position.middle_left
position.middle_center
position.middle_right
position.bottom_left
position.bottom_center
position.bottom_right
size.auto
size.tiny
size.small
size.normal
size.large
size.huge
plot.style_line
plot.style_linebr
plot.style_stepline
plot.style_stepline_diamond
plot.style_histogram
plot.style_cross
plot.style_area
plot.style_areabr
plot.style_columns
plot.style_circles
plot.style_steplinebr
format.inherit
format.price
format.volume
format.percent
format.mintick
dayofweek.sunday
dayofweek.monday
dayofweek.tuesday
dayofweek.wednesday
dayofweek.thursday
dayofweek.friday
dayofweek.saturday
shape.xcross
shape.cross
shape.circle
shape.triangleup
shape.triangledown
shape.flag
shape.arrowup
shape.arrowdown
shape.labelup
shape.labeldown
shape.square
shape.diamond
location.abovebar
location.belowbar
location.top
location.bottom
location.absolute
scale.right
scale.left
scale.none
currency.NONE
currency.USD
currency.EUR
currency.AUD
currency.GBP
currency.NZD
currency.CAD
currency.CHF
currency.HKD
currency.JPY
currency.NOK
currency.SEK
currency.SGD
currency.TRY
currency.ZAR
currency.RUB
currency.BTC
currency.ETH
currency.MYR
currency.KRW
currency.USDT
currency.INR
barmerge.lookahead_off
barmerge.lookahead_on
barmerge.gaps_off
barmerge.gaps_on
xloc.bar_index
xloc.bar_time
yloc.price
yloc.abovebar
yloc.belowbar
extend.none
extend.left
extend.right
extend.both
label.style_none
label.style_xcross
label.style_cross
label.style_triangleup
label.style_triangledown
label.style_flag
label.style_circle
label.style_arrowup
label.style_arrowdown
label.style_label_up
label.style_label_down
label.style_label_left
label.style_label_right
label.style_label_lower_left
label.style_label_lower_right
label.style_label_upper_left
label.style_label_upper_right
label.style_label_center
label.style_square
label.style_diamond
label.style_text_outline
display.none
display.pane
display.data_window
display.price_scale
display.status_line
display.all
line.style_solid
line.style_dotted
line.style_dashed
line.style_arrow_left
line.style_arrow_right
line.style_arrow_both
text.align_center
text.align_left
text.align_right
text.align_top
text.align_bottom
font.family_default
font.family_monospace
text.wrap_auto
text.wrap_none
order.ascending
order.descending
alert.freq_all
alert.freq_once_per_bar
alert.freq_once_per_bar_close
earnings.actual
earnings.estimate
earnings.standardized
dividends.net
dividends.gross
splits.denominator
splits.numerator

color.aqua
color.black
color.blue
color.fuchsia
color.gray
color.green
color.lime
color.maroon
color.navy
color.olive
color.purple
color.red
color.silver
color.teal
color.white
color.yellow

color.new(#008080, 0)
color.rgb(255, 166, 0)
color.r(#ff660065)
color.t(#ff6600)
color.new(#ff6600, 0)

syminfo.minmove
syminfo.pricescale
syminfo.sector
syminfo.industry
syminfo.country
earnings.future_time
earnings.future_period_end_time
earnings.future_eps
earnings.future_revenue
syminfo.employees
syminfo.shareholders
syminfo.shares_outstanding_float
syminfo.shares_outstanding_total
syminfo.target_price_average
syminfo.target_price_date
syminfo.target_price_estimates
syminfo.target_price_high
syminfo.target_price_low
syminfo.target_price_median
syminfo.recommendations_buy
syminfo.recommendations_buy_strong
syminfo.recommendations_date
syminfo.recommendations_hold
syminfo.recommendations_total
syminfo.recommendations_sell
syminfo.recommendations_sell_strong
dividends.future_amount
dividends.future_ex_date
dividends.future_pay_date

label.all
line.all
linefill.all
box.all
table.all
polyline.all

library()
indicator()
strategy()

chart.point.new()
chart.point.from_index()
chart.point.copy()
chart.point.from_time()
chart.point.now()

map.new<UDType,UDTypeTest>()
map.new<type,type>()
map.copy()
map.size()
map.get()
map.contains()
map.keys()
map.values()
map.put()
map.put_all()
map.remove()
map.clear()

runtime.error()
log.info()
log.warning()
log.error()

polyline.new()
polyline.delete()

ticker.inherit()

timeframe.from_seconds()

syminfo.prefix()
syminfo.ticker()

time()
time_close()
year()
month()
weekofyear()
dayofmonth()
dayofweek()
hour()
minute()
second()
float()
int()
bool()
color()
string()
line()
label()
table()
box()
linefill()

plot()
plotshape()
plotchar()
plotarrow()
plotbar()
plotcandle()
barcolor()
bgcolor()

color.new()
color.rgb()
color.r()
color.g()
color.b()
color.t()
color.from_gradient()

input()
input.bool()
input.int()
input.float()
input.string()
input.text_area()
input.symbol()
input.timeframe()
input.session()
input.source()
input.color()
input.time()
input.price()

alertcondition()
max_bars_back()
hline()
fill()
nz()
fixnan()
na()

math.pow()
math.min()
math.max()
math.abs()
math.log()
math.log10()
math.sqrt()
math.sign()
math.exp()
math.sin()
math.cos()
math.tan()
math.asin()
math.acos()
math.atan()
math.ceil()
math.floor()
math.round()
math.round_to_mintick()
math.todegrees()
math.toradians()
math.random()
math.sum()
math.avg()

timeframe.in_seconds()
timeframe.change()

request.currency_rate()
request.security()
request.security_lower_tf()
request.financial()
request.quandl()
request.earnings()
request.dividends()
request.splits()
request.economic()
request.seed()

ticker.new()
ticker.standard()
ticker.modify()
ticker.heikinashi()
ticker.renko()
ticker.linebreak()
ticker.kagi()
ticker.pointfigure()
timestamp()

str.format()
str.format_time()
str.tostring()
str.tonumber()
str.replace_all()
str.contains()
str.substring()
str.replace()
str.lower()
str.upper()
str.startswith()
str.endswith()
str.match()
str.pos()
str.split()
str.length()

ta.tr()
ta.vwap()
ta.median()
ta.max()
ta.min()
ta.mode()
ta.range()
ta.sma()
ta.hma()
ta.ema()
ta.wma()
ta.vwma()
ta.supertrend()
ta.macd()
ta.lowest()
ta.highest()
ta.lowestbars()
ta.highestbars()
ta.barssince()
ta.valuewhen()
ta.falling()
ta.rising()
ta.roc()
ta.cci()
ta.variance()
ta.dev()
ta.stdev()
ta.percentrank()
ta.rma()
ta.rsi()
ta.cum()
ta.change()
ta.mom()
ta.pivot_point_levels()
ta.swma()
ta.sar()
ta.cross()
ta.cog()
ta.alma()
ta.cmo()
ta.mfi()
ta.wpr()
ta.bb()
ta.bbw()
ta.kc()
ta.kcw()
ta.dmi()
ta.correlation()
ta.tsi()
ta.linreg()
ta.stoch()
ta.atr()
ta.percentile_nearest_rank()
ta.percentile_linear_interpolation()
ta.crossover()
ta.crossunder()
ta.pivothigh()
ta.pivotlow()

box.copy()
box.new()
box.delete()
box.get_left()
box.get_right()
box.get_top()
box.get_bottom()
box.set_left()
box.set_lefttop()
box.set_right()
box.set_rightbottom()
box.set_top()
box.set_bottom()
box.set_border_color()
box.set_bgcolor()
box.set_border_width()
box.set_border_style()
box.set_extend()
box.set_text_font_family()
box.set_text_halign()
box.set_text_valign()
box.set_text_size()
box.set_text()
box.set_text_color()
box.set_text_wrap()
box.set_top_left_point()
box.set_bottom_right_point()

line.copy()
line.new()
line.set_x1()
line.set_y1()
line.set_xy1()
line.set_x2()
line.set_y2()
line.set_xy2()
line.set_xloc()
line.set_extend()
line.set_color()
line.set_style()
line.set_width()
line.delete()
line.get_x1()
line.get_y1()
line.get_x2()
line.get_y2()
line.get_price()
line.set_first_point()
line.set_second_point()

linefill.new()
linefill.delete()
linefill.set_color()
linefill.get_line1()
linefill.get_line2()

label.new()
label.copy()
label.set_x()
label.set_y()
label.set_xy()
label.set_xloc()
label.set_yloc()
label.set_text()
label.set_text_font_family()
label.set_color()
label.set_style()
label.set_textcolor()
label.set_size()
label.set_textalign()
label.set_tooltip()
label.delete()
label.get_x()
label.get_y()
label.get_text()
label.set_point()

array.new<type>()
array.new<float>()
array.new<int>()
array.new<color>()
array.new<bool>()
array.new<string>()
array.new<line>()
array.new<box>()
array.new<table>()
array.new<label>()
array.new<linefill>()
array.new<asdfasdfasdfasd>()
array.new_float()
array.new_int()
array.new_color()
array.new_bool()
array.new_string()
array.new_line()
array.new_box()
array.new_table()
array.new_label()
array.new_linefill()
array.copy()
array.slice()
array.size()
array.first()
array.last()
array.every()
array.some()
array.get()
array.min()
array.max()
array.range()
array.sum()
array.set()
array.from()
array.fill()
array.insert()
array.join()
array.push()
array.remove()
array.pop()
array.clear()
array.sort()
array.sort_indices()
array.percentrank()
array.percentile_nearest_rank()
array.percentile_linear_interpolation()
array.abs()
array.binary_search()
array.binary_search_leftmost()
array.binary_search_rightmost()
array.concat()
array.avg()
array.stdev()
array.variance()
array.covariance()
array.mode()
array.median()
array.standardize()
array.indexof()
array.lastindexof()
array.includes()
array.shift()
array.unshift()
array.reverse()

alert()

table.new()
table.delete()
table.set_position()
table.set_bgcolor()
table.set_frame_color()
table.set_border_color()
table.set_frame_width()
table.set_border_width()
table.clear()
table.merge_cells()

table.cell()
table.cell_set_text()
table.cell_set_text_font_family()
table.cell_set_tooltip()
table.cell_set_width()
table.cell_set_height()
table.cell_set_text_color()
table.cell_set_text_halign()
table.cell_set_text_valign()
table.cell_set_text_size()
table.cell_set_bgcolor()

matrix.new<int>()
matrix.new<float>()
matrix.new<bool>()
matrix.new<string>()
matrix.new<color>()
matrix.new<line>()
matrix.new<label>()
matrix.new<box>()
matrix.new<table>()
matrix.new<linefill>()
matrix.new<type>()
matrix.row()
matrix.col()
matrix.reshape()
matrix.get()
matrix.set()
matrix.add_row()
matrix.add_col()
matrix.remove_row()
matrix.remove_col()
matrix.fill()
matrix.submatrix()
matrix.copy()
matrix.columns()
matrix.rows()
matrix.elements_count()
matrix.concat()
matrix.swap_rows()
matrix.swap_columns()
matrix.reverse()
matrix.sort()
matrix.det()
matrix.min()
matrix.max()
matrix.avg()
matrix.median()
matrix.mode()
matrix.transpose()
matrix.sum()
matrix.diff()
matrix.mult()
matrix.pinv()
matrix.inv()
matrix.rank()
matrix.trace()
matrix.eigenvalues()
matrix.eigenvectors()
matrix.kron()
matrix.pow()
matrix.is_zero()
matrix.is_identity()
matrix.is_binary()
matrix.is_symmetric()
matrix.is_antisymmetric()
matrix.is_diagonal()
matrix.is_antidiagonal()
matrix.is_triangular()
matrix.is_stochastic()
matrix.is_square()

strategy.position_size
strategy.position_avg_price
strategy.openprofit
strategy.netprofit
strategy.equity
strategy.position_entry_name
strategy.grossprofit
strategy.grossloss
strategy.max_drawdown
strategy.max_runup
strategy.max_contracts_held_all
strategy.max_contracts_held_long
strategy.max_contracts_held_short
strategy.opentrades
strategy.closedtrades
strategy.wintrades
strategy.losstrades
strategy.eventrades
strategy.initial_capital
strategy.account_currency
strategy.long
strategy.short
strategy.margin_liquidation_price
strategy.grossloss_percent
strategy.max_runup_percent
strategy.netprofit_percent
strategy.openprofit_percent
strategy.grossprofit_percent
strategy.max_drawdown_percent
strategy.oca.none
strategy.oca.cancel
strategy.oca.reduce
strategy.commission.percent
strategy.commission.cash_per_contract
strategy.commission.cash_per_order
strategy.fixed
strategy.cash
strategy.percent_of_equity
strategy.direction.all
strategy.direction.long
strategy.direction.short

strategy.entry()
strategy.order()
strategy.exit()
strategy.cancel()
strategy.cancel_all()
strategy.closedtrades.max_drawdown_percent()
strategy.closedtrades.max_runup_percent()
strategy.closedtrades.profit_percent()
strategy.opentrades.max_drawdown_percent()
strategy.opentrades.max_runup_percent()
strategy.opentrades.profit_percent()
strategy.default_entry_qty()
strategy.close_all()
strategy.close()
strategy.risk.max_position_size()
strategy.risk.max_intraday_loss()
strategy.risk.max_intraday_filled_orders()
strategy.risk.allow_entry_in()
strategy.risk.max_cons_loss_days()
strategy.risk.max_drawdown()
strategy.closedtrades.entry_price()
strategy.closedtrades.entry_bar_index()
strategy.closedtrades.entry_time()
strategy.closedtrades.exit_price()
strategy.closedtrades.exit_bar_index()
strategy.closedtrades.exit_time()
strategy.closedtrades.size()
strategy.closedtrades.profit()
strategy.closedtrades.commission()
strategy.closedtrades.max_runup()
strategy.closedtrades.max_drawdown()
strategy.closedtrades.entry_id()
strategy.closedtrades.exit_id()
strategy.opentrades.entry_comment()
strategy.closedtrades.entry_comment()
strategy.closedtrades.exit_comment()
strategy.opentrades.entry_price()
strategy.opentrades.entry_bar_index()
strategy.opentrades.entry_time()
strategy.opentrades.size()
strategy.opentrades.profit()
strategy.opentrades.commission()
strategy.opentrades.max_runup()
strategy.opentrades.max_drawdown()
strategy.opentrades.entry_id()
strategy.convert_to_account()
strategy.convert_to_symbol()

?:
+
+
-
-
[]
()
:=
==
!=
>
<
>=
<=
*
/
%
+=
-=
*=
/=
%=
=>


method sldkfjslkdfj() =>
method sldkfjslkdfj() =>
    sldkfjskldjflskdfj
    sldkfjskldjflskdfjsdfjlsd
    sdlkfslkdf
    sldkfjslkdfj
    float sdfs = skdfjsklf
    var float sldkfjs = syminfo.sector
    varip color ssdkfjs = color.new(#ff6600, 0)


switch false

"THIS IS A STRING DQ"
"THIS IS A STRING SQ"


str.format('{0}, {1}, {2}', 'a', 'b', 'c')

// dfgsdfgsdfgs asdfasdfasf
// @function asdfasdfasdf
// @param
// @returns
// @variable
// @type
// @field
// @strategy_alert_message

//@version=5


// udt
type MyType
    int               x
    chart.point       cp
    float             y = 0.000
    myimport.MyType   udt
    MyType            self


// Builtins
varip  array<int>      arrayIntV 
varip  int[]           arrayIntV2 
var    array<int>      arrayInt 
var    int[]           arrayInt2 
array<int>             arrayInt_        = array.new<int>()

varip  array<float>    arrayFloatV 
varip  float[]         arrayFloatV2 
var    array<float>    arrayFloat 
var    float[]         arrayFloat2 
array<float>           arrayFloat_      = array.new<float>()

varip  array<string>   arrayStringV 
varip  string[]        arrayStringV2 
var    array<string>   arrayString 
var    string[]        arrayString2 
array<string>          arrayString_     = array.new<string>()

varip  array<bool>     arrayBoolV 
varip  bool[]          arrayBoolV2 
var    array<bool>     arrayBool 
var    bool[]          arrayBool2 
array<bool>            arrayBool_       = array.new<bool>()

varip  array<color>    arrayColorV 
varip  color[]         arrayColorV2 
var    array<color>    arrayColor 
var    color[]         arrayColor2 
array<color>           arrayColor_      = array.new<color>()

varip  array<line>     arrayLineV 
varip  line[]          arrayLineV2 
var    array<line>     arrayLine 
var    line[]          arrayLine2 
array<line>            arrayLine_       = array.new<line>()

varip  array<label>    arrayLabelV 
varip  label[]         arrayLabelV2 
var    array<label>    arrayLabel 
var    label[]         arrayLabel2 
array<label>           arrayLabel_      = array.new<label>()

varip  array<box>      arrayBoxV 
varip  box[]           arrayBoxV2 
var    array<box>      arrayBox 
var    box[]           arrayBox2 
array<box>             arrayBox_        = array.new<box>()

varip  map<string, int>    mapStringIntV
var    map<string, int>    mapStringInt
map<string, int>           mapStringInt_    = map.new<string, int>()

varip  map<int, float>     mapIntFloatV
var    map<int, float>     mapIntFloat
map<int, float>            mapIntFloat_     = map.new<int, float>()

varip  map<string, string> mapStringStringV
var    map<string, string> mapStringString
map<string, string>        mapStringString_ = map.new<string, string>()

varip  matrix<int>         matrixIntV
var    matrix<int>         matrixInt
matrix<int>                matrixInt_       = matrix.new<int>(1,1,0)

varip  matrix<float>       matrixFloatV
var    matrix<float>       matrixFloat
matrix<float>              matrixFloat_     = matrix.new<float>(1,1,0.0)

varip  matrix<string>      matrixStringV
var    matrix<string>      matrixString
matrix<string>             matrixString_    = matrix.new<string>(1,1,"")

varip  float      _floatV
var    float      _float 
float  _float_  =  float  (10)

varip  array<MyType>    arrayMyTypeV 
varip  MyType[]         arrayMyTypeV2 
var    array<MyType>    arrayMyType 
var    MyType[]         arrayMyType2 
array<MyType>           arrayMyType_      = array.new<MyType>()

MyType udtV = MyType.new()
MyType udt_

varip array<MyType> arrayUdtV
varip MyType[]      arrayUdtV2

varip array<MyType> arrayUdtV
var  array<MyType>  arrayUdt
array<MyType>       arrayUdt_ = array.new<MyType>(1,MyType.new())
arrayUdt_                      = array.new<MyType>(1,MyType.new())

varip map<string, MyType> mapStringUdtV
var  map<string, MyType> mapStringUdt
map<string, MyType> mapStringUdt_ = map.new<string, MyType>()
mapStringUdt_          = map.new<string, MyType>()

varip matrix<MyType> matrixUdtV
var  matrix<MyType> matrixUdt
matrix<MyType> matrixUdt_ = matrix.new<MyType>(1,1,MyType.new())
matrixUdt_                 = matrix.new<MyType>(1,1,MyType.new())



// with imported udt
import mynam/mylib/10 as myimport

varip myimport.MyType             udtV = this
myimport.MyType                   udt
myimport.MyType                   udt_ = myimport.MyType.new()

varip array<myimport.MyType>      arrayUdtV
varip myimport.MyType[]           arrayUdtV2

varip array<myimport.MyType>      matrixUdtV
var  array<myimport.MyType>       matrixUdt
array<myimport.MyType>            matrixUdt_ = array.new<myimport.MyType>(1,myimport.MyType.new())
                                  matrixUdt_ = array.new<myimport.MyType>(1,myimport.MyType.new())

varip map<string,myimport.MyType> mapStringUdtV
var  map<string,myimport.MyType>  mapStringUdt
map<string,myimport.MyType>       mapStringUdt_ = map.new<string, myimport.MyType>()
                                  mapStringUdt_ = map.new<string, myimport.MyType>()

varip matrix<myimport.MyType>     matrixUdtV
var  matrix<myimport.MyType>      matrixUdt
matrix<myimport.MyType>           matrixUdt_ = matrix.new<myimport.MyType>(1,1,myimport.MyType.new())



// indented 


    // Builtins
    varip  array<int>      arrayIntV 
    varip  int[]           arrayIntV2 
    var    array<int>      arrayInt 
    var    int[]           arrayInt2 
    array<int>             arrayInt_        = array.new<int>()

    varip  array<float>    arrayFloatV 
    varip  float[]         arrayFloatV2 
    var    array<float>    arrayFloat 
    var    float[]         arrayFloat2 
    array<float>           arrayFloat_      = array.new<float>()

    varip  array<string>   arrayStringV 
    varip  string[]        arrayStringV2 
    var    array<string>   arrayString 
    var    string[]        arrayString2 
    array<string>          arrayString_     = array.new<string>()

    varip  array<bool>     arrayBoolV 
    varip  bool[]          arrayBoolV2 
    var    array<bool>     arrayBool 
    var    bool[]          arrayBool2 
    array<bool>            arrayBool_       = array.new<bool>()

    varip  array<color>    arrayColorV 
    varip  color[]         arrayColorV2 
    var    array<color>    arrayColor 
    var    color[]         arrayColor2 
    array<color>           arrayColor_      = array.new<color>()

    varip  array<line>     arrayLineV 
    varip  line[]          arrayLineV2 
    var    array<line>     arrayLine 
    var    line[]          arrayLine2 
    array<line>            arrayLine_       = array.new<line>()

    varip  array<label>    arrayLabelV 
    varip  label[]         arrayLabelV2 
    var    array<label>    arrayLabel 
    var    label[]         arrayLabel2 
    array<label>           arrayLabel_      = array.new<label>()

    varip  array<box>      arrayBoxV 
    varip  box[]           arrayBoxV2 
    var    array<box>      arrayBox 
    var    box[]           arrayBox2 
    array<box>             arrayBox_        = array.new<box>()

    varip  map<string, int>    mapStringIntV
    var    map<string, int>    mapStringInt
    map<string, int>           mapStringInt_    = map.new<string, int>()

    varip  map<int, float>     mapIntFloatV
    var    map<int, float>     mapIntFloat
    map<int, float>            mapIntFloat_     = map.new<int, float>()

    varip  map<string, string> mapStringStringV
    var    map<string, string> mapStringString
    map<string, string>        mapStringString_ = map.new<string, string>()

    varip  matrix<int>         matrixIntV
    var    matrix<int>         matrixInt
    matrix<int>                matrixInt_       = matrix.new<int>(1,1,0)

    varip  matrix<float>       matrixFloatV
    var    matrix<float>       matrixFloat
    matrix<float>              matrixFloat_     = matrix.new<float>(1,1,0.0)

    varip  matrix<string>      matrixStringV
    var    matrix<string>      matrixString
    matrix<string>             matrixString_    = matrix.new<string>(1,1,"")

    varip  float      _floatV
    var    float      _float 
    float  _float_  =  float  (10)

    varip  array<MyType>    arrayMyTypeV 
    varip  MyType[]         arrayMyTypeV2 
    var    array<MyType>    arrayMyType 
    var    MyType[]         arrayMyType2 
    array<MyType>           arrayMyType_      = array.new<MyType>()

    MyType udtV = MyType.new()
    MyType udt_

    varip array<MyType> arrayUdtV
    varip MyType[]      arrayUdtV2

    varip array<MyType> arrayUdtV
    var  array<MyType>  arrayUdt
    array<MyType>       arrayUdt_     = array.new<MyType>(1,MyType.new())
    arrayUdt_                         = array.new<MyType>(1,MyType.new())

    varip map<string, MyType> mapStringUdtV
    var  map<string, MyType> mapStringUdt
    map<string, MyType> mapStringUdt_ = map.new<string, MyType>()
    mapStringUdt_                     = map.new<string, MyType>()

    varip matrix<MyType> matrixUdtV
    var  matrix<MyType> matrixUdt
    matrix<MyType> matrixUdt_         = matrix.new<MyType>(1,1,MyType.new())
    matrixUdt_                        = matrix.new<MyType>(1,1,MyType.new())

    varip myimport.MyType             udtV = this
    myimport.MyType                   udt
    myimport.MyType                   udt_ = myimport.MyType.new()

    varip array<myimport.MyType>      arrayUdtV
    varip myimport.MyType[]           arrayUdtV2

    varip array<myimport.MyType>      matrixUdtV
    var  array<myimport.MyType>       matrixUdt
    array<myimport.MyType>            matrixUdt_ = array.new<myimport.MyType>(1,myimport.MyType.new())
                                      matrixUdt_ = array.new<myimport.MyType>(1,myimport.MyType.new())

    varip map<string,myimport.MyType> mapStringUdtV
    var  map<string,myimport.MyType>  mapStringUdt
    map<string,myimport.MyType>       mapStringUdt_ = map.new<string, myimport.MyType>()
                                      mapStringUdt_ = map.new<string, myimport.MyType>()

    varip matrix<myimport.MyType>     matrixUdtV
    var  matrix<myimport.MyType>      matrixUdt
    matrix<myimport.MyType>           matrixUdt_ = matrix.new<myimport.MyType>(1,1,myimport.MyType.new())
                            
